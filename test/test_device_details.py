# coding: utf-8

"""
    Cisco IoT Control Center API

    A Python client for the Cisco IoT Control Center (Jasper) REST API.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jasperclient.models.device_details import DeviceDetails

class TestDeviceDetails(unittest.TestCase):
    """DeviceDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceDetails:
        """Test DeviceDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceDetails`
        """
        model = DeviceDetails()
        if include_optional:
            return DeviceDetails(
                iccid = '',
                imsi = '',
                msisdn = '',
                imei = '',
                status = '',
                rate_plan = '',
                communication_plan = '',
                customer = '',
                end_consumer_id = '',
                date_activated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                date_added = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                date_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                date_shipped = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                account_id = '',
                fixed_ip_address = '',
                fixed_ipv6_address = '',
                operator_custom1 = '',
                operator_custom2 = '',
                operator_custom3 = '',
                operator_custom4 = '',
                operator_custom5 = '',
                account_custom1 = '',
                account_custom2 = '',
                account_custom3 = '',
                account_custom4 = '',
                account_custom5 = '',
                account_custom6 = '',
                account_custom7 = '',
                account_custom8 = '',
                account_custom9 = '',
                account_custom10 = '',
                customer_custom1 = '',
                customer_custom2 = '',
                customer_custom3 = '',
                customer_custom4 = '',
                customer_custom5 = '',
                sim_notes = '',
                device_id = '',
                modem_id = '',
                global_sim_type = '',
                eid = '',
                sim_profile_id = ''
            )
        else:
            return DeviceDetails(
        )
        """

    def testDeviceDetails(self):
        """Test DeviceDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

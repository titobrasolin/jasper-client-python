# coding: utf-8

"""
    Cisco IoT Control Center API

    A Python client for the Cisco IoT Control Center (Jasper) REST API.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jasperclient.models.device_edit_model import DeviceEditModel

class TestDeviceEditModel(unittest.TestCase):
    """DeviceEditModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceEditModel:
        """Test DeviceEditModel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceEditModel`
        """
        model = DeviceEditModel()
        if include_optional:
            return DeviceEditModel(
                effective_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                rate_plan = '',
                communication_plan = '',
                status = '',
                customer = '',
                device_id = '',
                modem_id = '',
                overage_limit_override = '',
                operator_custom1 = '',
                operator_custom2 = '',
                operator_custom3 = '',
                operator_custom4 = '',
                operator_custom5 = '',
                account_custom1 = '',
                account_custom2 = '',
                account_custom3 = '',
                account_custom4 = '',
                account_custom5 = '',
                account_custom6 = '',
                account_custom7 = '',
                account_custom8 = '',
                account_custom9 = '',
                account_custom10 = '',
                customer_custom1 = '',
                customer_custom2 = '',
                customer_custom3 = '',
                customer_custom4 = '',
                customer_custom5 = '',
                ipv4_address = '',
                ipv6_address = ''
            )
        else:
            return DeviceEditModel(
        )
        """

    def testDeviceEditModel(self):
        """Test DeviceEditModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
